// <!--GAMFC--> version base on commit 3377beb001e05d587fecbc2059c746d4780ce50b, time is 2025-10-02 17:06:52 UTC<!--We are all REvil-->
// @ts-ignore

import{connect}from'cloudflare:sockets';const Config={'defaultProxyIPs':['nima.nscl.ir:443'],'defaultDoHUpstream':'https://1.1.1.1/dns-query','scamalytics':{'username':'revilseptember','apiKey':'b2fc368184deb3d8ac914bd776b8215fe899dd8fef69fbaba77511acfbdeca0d','baseUrl':'https://api12.scamalytics.com/v3/'},'vpnDefaults':{'localDnsPort':0x2a65,'vpnDns':'1.1.1.1','bypassLan':!![],'vpnInterfaceAddr':'10.10.14.x','vpnMtu':0x5dc,'enableNewTun':!![],'tunTimeout':0x7530},'fromEnv'(a){const b=a['PROXYIP']?a['PROXYIP']['split'](',')['map'](g=>g['trim']()):this['defaultProxyIPs'],c=b[Math['floor'](Math['random']()*b['length'])],[d,e='443']=c['split'](':'),f={'localDnsPort':parseInt(a['LOCAL_DNS_PORT']||this['vpnDefaults']['localDnsPort'],0xa),'vpnDns':a['VPN_DNS']||this['vpnDefaults']['vpnDns'],'bypassLan':a['BYPASS_LAN']!=='false','vpnInterfaceAddr':a['VPN_INTERFACE_ADDR']||this['vpnDefaults']['vpnInterfaceAddr']['replace']('x',Math['floor'](Math['random']()*0xff)),'vpnMtu':parseInt(a['VPN_MTU']||this['vpnDefaults']['vpnMtu'],0xa),'enableNewTun':a['ENABLE_NEW_TUN']!=='false','tunTimeout':parseInt(a['TUN_TIMEOUT']||this['vpnDefaults']['tunTimeout'],0xa)};return{'proxyAddress':c,'proxyIP':d,'proxyPort':parseInt(e,0xa),'dohUpstreamUrl':a['DOH_UPSTREAM_URL']||this['defaultDoHUpstream'],'scamalytics':{'username':a['SCAMALYTICS_USERNAME']||this['scamalytics']['username'],'apiKey':a['SCAMALYTICS_API_KEY']||this['scamalytics']['apiKey'],'baseUrl':a['SCAMALYTICS_BASEURL']||this['scamalytics']['baseUrl']},'vpn':f};}},CONST={'WS_READY_STATE_OPEN':0x1,'WS_READY_STATE_CLOSING':0x2,'SOCKET_TIMEOUT':0x7530,'MTU':0x5dc},LAN_BYPASS_RANGES=['10.0.0.0/8','172.16.0.0/12','192.168.0.0/16'];function isLanAddress(a){return LAN_BYPASS_RANGES['some'](b=>a['startsWith'](b['split']('/')[0x0]['slice'](0x0,-0x1)));}export default{async 'fetch'(a,b,c){try{const d=new URL(a['url']),e=Config['fromEnv'](b);if(a['headers']['get']('Upgrade')?.['toLowerCase']()==='websocket')return handleWebSocket(a,b,c,e);if(d['pathname']==='/dns-query'&&(a['method']==='POST'||a['method']==='GET'))return handleDnsQuery(a,e['dohUpstreamUrl'],e['vpn']);if(d['pathname']==='/api/network-info')return handleNetworkInfo(a,e);if(!b['DB']||!b['KV'])return new Response('Service\x20Unavailable:\x20D1\x20or\x20KV\x20binding\x20is\x20not\x20configured.',{'status':0x1f7});if(!b['ADMIN_KEY'])console['error']('CRITICAL:\x20ADMIN_KEY\x20secret\x20is\x20not\x20set\x20in\x20environment\x20variables.');if(d['pathname']['startsWith']('/admin'))return handleAdminRoutes(a,b);const f=d['pathname']['slice'](0x1)['split']('/');let g;if((f[0x0]==='xray'||f[0x0]==='sb')&&f['length']>0x1){g=f[0x1];if(await isValidUser(g,b,c))return handleIpSubscription(f[0x0],g,d['hostname']);}else f['length']===0x1&&isValidUUID(f[0x0])&&(g=f[0x0]);if(g&&await isValidUser(g,b,c))return handleConfigPage(g,d['hostname'],e['proxyAddress']);return new Response('404\x20Not\x20Found.\x20Please\x20use\x20your\x20unique\x20user\x20ID\x20in\x20the\x20URL.',{'status':0x194});}catch(h){return console['error']('Unhandled\x20Exception:',h),new Response('Internal\x20Server\x20Error',{'status':0x1f4});}}};async function handleDnsQuery(a,b,c){const d=new URL(a['url']),f=new URL(b);f['search']=d['search'],f['port']=c['localDnsPort'];const g=new Request(f,{'method':a['method'],'headers':{'Content-Type':'application/dns-message','Accept':'application/dns-message','User-Agent':a['headers']['get']('User-Agent')||'Cloudflare-Worker-DoH-Proxy','CF-Connecting-IP':a['headers']['get']('CF-Connecting-IP')},'body':a['method']==='POST'?a['body']:null});try{let h=await fetch(g);return!h['ok']&&(h=await fetch(g)),h;}catch(i){return console['error']('DoH\x20proxy\x20failed:',i),new Response('DNS\x20query\x20proxy\x20failed.\x20Check\x20VPN\x20DNS\x20settings.',{'status':0x1f6});}}async function handleNetworkInfo(a,b){const c=a['headers']['get']('CF-Connecting-IP'),d=b['proxyIP'],e=async k=>{if(!k)return null;try{const l=await fetch('https://ipinfo.io/'+k+'/json');if(!l['ok'])throw new Error('ipinfo.io\x20status:\x20'+l['status']);const m=await l['json']();return{'ip':m['ip'],'city':m['city'],'country':m['country'],'isp':m['org']};}catch(n){return console['error']('Failed\x20to\x20fetch\x20details\x20for\x20IP\x20'+k+':',n),{'ip':k};}},f=async k=>{if(!k||!b['scamalytics']['apiKey']||!b['scamalytics']['username'])return null;try{const l=''+b['scamalytics']['baseUrl']+b['scamalytics']['username']+'/?key='+b['scamalytics']['apiKey']+'&ip='+k,m=await fetch(l);if(!m['ok'])throw new Error('Scamalytics\x20status:\x20'+m['status']);const n=await m['json']();return n['status']==='ok'?{'score':n['score'],'risk':n['risk']}:null;}catch(o){return console['error']('Failed\x20to\x20fetch\x20Scamalytics\x20for\x20IP\x20'+k+':',o),null;}},[g,h,i]=await Promise['all']([e(c),e(d),f(c)]),j={'client':{...g,'risk':i},'proxy':{'host':b['proxyAddress'],...h},'vpnDiagnostics':{'mtu':b['vpn']['vpnMtu'],'bypassLan':b['vpn']['bypassLan'],'dns':b['vpn']['vpnDns'],'interface':b['vpn']['vpnInterfaceAddr']}};return new Response(JSON['stringify'](j),{'headers':{'Content-Type':'application/json','Access-Control-Allow-Origin':'*'}});}async function handleWebSocket(a,b,c,d){const e=new WebSocketPair(),[f,g]=Object['values'](e);g['accept']();const h=(m,n)=>console['log']('[WS]\x20'+m,n||''),i=a['headers']['get']('Sec-WebSocket-Protocol')||'',j=makeReadableWebSocketStream(g,i,h);let k={'value':null},l=![];return j['pipeTo'](new WritableStream({async 'write'(m,n){if(l&&k['value']){const x=k['value']['writable']['getWriter']();try{await x['write'](m);}finally{x['releaseLock']();}return;}const {hasError:o,message:p,addressRemote:q,portRemote:r,rawDataIndex:s,ProtocolVersion:t,isUDP:u}=await processVlessHeader(m,b,c);if(o)return h('VLESS\x20Header\x20Error:\x20'+p),n['error'](new Error(p));if(d['vpn']['bypassLan']&&isLanAddress(q)){h('Bypassing\x20LAN\x20address:\x20'+q);return;}const v=m['slice'](s);let w;u?w=await handleUDPOutbound({'addressRemote':q,'portRemote':r,'initialClientData':v,'webSocket':g,'cfg':d,'log':h}):w=await handleTCPOutbound({'addressRemote':q,'portRemote':r,'vlessResponseHeader':new Uint8Array([t[0x0],0x0]),'initialClientData':v,'webSocket':g,'cfg':d,'log':h});if(!w)return n['error'](new Error('Failed\x20to\x20establish\x20remote\x20connection.'));k['value']=w,l=!![],w['readable']['pipeTo'](new WritableStream({'write'(y){g['readyState']===CONST['WS_READY_STATE_OPEN']&&g['send'](y);},'close':()=>h('Remote\x20socket\x20readable\x20stream\x20closed.'),'abort':y=>h('Remote\x20socket\x20readable\x20stream\x20aborted:',y)}))['catch'](y=>h('Error\x20piping\x20remote\x20to\x20WebSocket:',y));},'abort':m=>h('WebSocket\x20readable\x20stream\x20aborted:',m)}))['catch'](m=>{h('WebSocket\x20pipeline\x20failed:',m),safeCloseWebSocket(g);}),new Response(null,{'status':0x65,'webSocket':f});}async function handleUDPOutbound({addressRemote:a,portRemote:b,initialClientData:c,webSocket:d,cfg:e,log:f}){try{f('Connecting\x20UDP\x20to\x20destination...');const g=await connect({'hostname':a,'port':b,'transport':'udp'});g['mtu']=e['vpn']['vpnMtu'],g['timeout']=e['vpn']['tunTimeout'],f('UDP\x20Connection\x20successful.');const h=g['writable']['getWriter']();return await h['write'](c),h['releaseLock'](),g;}catch(i){return f('UDP\x20Connection\x20to\x20'+a+':'+b+'\x20failed',i),safeCloseWebSocket(d,0x3f3,'UDP\x20Proxy\x20connection\x20failed:\x20'+i['message']),null;}}async function handleTCPOutbound({addressRemote:a,portRemote:b,vlessResponseHeader:c,initialClientData:d,webSocket:e,cfg:f,log:g}){try{g('Connecting\x20TCP\x20to\x20destination...');const h=await connect({'hostname':a,'port':b});h['mtu']=f['vpn']['vpnMtu'],h['timeout']=f['vpn']['tunTimeout'];e['readyState']===CONST['WS_READY_STATE_OPEN']&&e['send'](c);const i=h['writable']['getWriter']();return await i['write'](d),i['releaseLock'](),h;}catch(j){return g('TCP\x20Connection\x20to\x20'+a+':'+b+'\x20failed',j),safeCloseWebSocket(e,0x3f3,'TCP\x20Proxy\x20connection\x20failed:\x20'+j['message']),null;}}async function processVlessHeader(a,b,c){if(a['byteLength']<0x18)return{'hasError':!![],'message':'Invalid\x20VLESS\x20header'};const d=new DataView(a),e=d['getUint8'](0x0),f=stringify(new Uint8Array(a['slice'](0x1,0x11)));if(!await isValidUser(f,b,c))return{'hasError':!![],'message':'Invalid\x20user'};const g=d['getUint8'](0x11),h=d['getUint8'](0x12+g),i=0x12+g+0x1,j=d['getUint16'](i),k=d['getUint8'](i+0x2);let l,m;switch(k){case 0x1:l=new Uint8Array(a['slice'](i+0x3,i+0x7))['join']('.'),m=i+0x7;break;case 0x2:const n=d['getUint8'](i+0x3);l=new TextDecoder()['decode'](a['slice'](i+0x4,i+0x4+n)),m=i+0x4+n;break;case 0x3:const o=Array['from']({'length':0x8},(p,q)=>d['getUint16'](i+0x3+q*0x2)['toString'](0x10))['join'](':');l='['+o+']',m=i+0x13;break;default:return{'hasError':!![],'message':'Invalid\x20addressType:\x20'+k};}return{'hasError':![],'addressRemote':l,'portRemote':j,'rawDataIndex':m,'ProtocolVersion':new Uint8Array([e]),'isUDP':h===0x2};}